#!/bin/bash

_puid=$(printenv PUID)
_pgid=$(printenv PGID)

cloud_encrypt_dir="/cloud-encrypt"
cloud_decrypt_dir="/cloud-decrypt"

local_decrypt_dir="/local-decrypt"
local_media_dir="/local-media"

local_work_dir="/local-workdir"

rclone_config="--config=/config/rclone.conf"
rclone_exclude_file="/config/exclude.txt"
rclone_options="${rclone_config} --buffer-size $(printenv BUFFER_SIZE) --checkers $(printenv CHECKERS) --transfers $(printenv TRANSFERS)"
#rclone_mount_options="${rclone_options} --allow-non-empty --allow-other --max-read-ahead $(printenv MAX_READ_AHEAD) --uid ${_puid:-911} --gid ${_pgid:-911}"
rclone_mirror_options="${rclone_config} --exclude-from=${rclone_exclude_file} --drive-chunk-size $(printenv MIRROR_CHUNK_SIZE) --bwlimit $(printenv MIRROR_BWLIMIT) --tpslimit $(printenv MIRROR_TPS_LIMIT) --tpslimit-burst $(printenv MIRROR_TPS_LIMIT_BURST) --fast-list"
rclone_copy_options="${rclone_options} --drive-chunk-size $(printenv COPY_CHUNK_SIZE) --bwlimit $(printenv COPY_BWLIMIT) --tpslimit $(printenv COPY_TPS_LIMIT) --tpslimit-burst $(printenv COPY_TPS_LIMIT_BURST) --fast-list"
rclone_move_options="${rclone_options} --drive-chunk-size $(printenv MOVE_CHUNK_SIZE) --bwlimit $(printenv MOVE_BWLIMIT) --tpslimit $(printenv MOVE_TPS_LIMIT) --tpslimit-burst $(printenv MOVE_TPS_LIMIT_BURST) --fast-list"
rclone_mount_options="${rclone_options} --allow-non-empty --allow-other --uid ${_puid:-911} --gid ${_pgid:-911} --umask $(printenv RCLONE_MOUNT_UMASK) --vfs-read-chunk-size=$(printenv VFS_READ_CHUNK_SIZE) --vfs-read-chunk-size-limit=$(printenv VFS_READ_CHUNK_SIZE_LIMIT) --max-read-ahead=$(printenv MAX_READ_AHEAD) --drive-skip-gdocs --poll-interval=1m --dir-cache-time=$(printenv DIR_CACHE_TIME) --drive-chunk-size=$(printenv DRIVE_CHUNK_SIZE) --timeout=1h"

plexdrive_temp_dir="/chunks"
plexdrive_cache_bolt="/chunks/cache.bolt"
#plexdrive_options="mount --config=/config --cache-file=${plexdrive_cache_bolt} --chunk-size=$(printenv CHUNK_SIZE) --chunk-check-threads=$(printenv CHUNK_CHECK_THREADS) --chunk-load-ahead=$(printenv CHUNK_LOAD_AHEAD) --chunk-load-threads=$(printenv CHUNK_LOAD_THREADS) --max-chunks=$(printenv MAX_CHUNKS) -o allow_other"
plexdrive_options="mount --config=/config --cache-file=${plexdrive_cache_bolt} --chunk-size=$(printenv CHUNK_SIZE) --chunk-check-threads=$(printenv CHUNK_CHECK_THREADS) --chunk-load-ahead=$(printenv CHUNK_LOAD_AHEAD) --chunk-load-threads=$(printenv CHUNK_LOAD_THREADS) --max-chunks=$(printenv MAX_CHUNKS) --uid=${_puid:-911} --gid=${_pgid:-911} -o allow_other --umask=$(printenv PLEXDRIVE_MOUNT_UMASK) --root-node-id=$(printenv PLEXDRIVE_ROOT_NODE_ID)"

if [ "$(printenv READ_ONLY)" != "0" ]; then
    rclone_mount_options="${rclone_mount_options} --read-only"
    plexdrive_options="${plexdrive_options} -o read_only"
fi

if [ "$(printenv RCLONE_VERBOSE)" != "0" ]; then
  rclone_mirror_options="${rclone_mirror_options} --verbose"
  rclone_mount_options="${rclone_mount_options} --verbose"
fi

if [ "$(printenv RCLONE_REMOTE_CONTROL)" != "0" ]; then
  rclone_mount_options="${rclone_mount_options} --rc"
fi

if [ "$(printenv RCLONE_LOG_LEVEL)" != "" ]; then
  rclone_mirror_options="${rclone_mirror_options} --log-level $(printenv RCLONE_LOG_LEVEL)"
  rclone_mount_options="${rclone_mount_options} --log-level $(printenv RCLONE_LOG_LEVEL)"
fi

###ufs_options="-o uid=${_puid:-911} -o gid=${_pgid:-911} -o allow_other"
ufs_options="-o uid=${_puid:-911} -o gid=${_pgid:-911} -o cow,allow_other,direct_io,nonempty,auto_cache,sync_read"
#mfs_options="-o uid=${_puid:-911} -o gid=${_pgid:-911} -o defaults,nonempty,allow_other,direct_io,use_ino,category.create=ff,category.search=ff,minfreespace=0"
mfs_options="-o uid=${_puid:-911} -o gid=${_pgid:-911} -o defaults,sync_read,auto_cache,use_ino,allow_other,func.getattr=newest,category.action=all,category.create=ff"

###temp disable
###if [ "$(printenv UFS_ADDITIONAL_MOUNT_OPTIONS)" != "" ]; then
  #ufs_options="${ufs_options} -o cow,direct_io,nonempty,auto_cache,sync_read"
###  ufs_options="${ufs_options} -o $(printenv UFS_ADDITIONAL_MOUNT_OPTIONS)"
##fi

rclone_cloud_endpoint=$(printenv RCLONE_CLOUD_ENDPOINT | tr -d '"' | tr -d "'")
rclone_mirror_endpoint=$(printenv RCLONE_MIRROR_ENDPOINT | tr -d '"' | tr -d "'")
rclone_local_endpoint=$(printenv RCLONE_LOCAL_ENDPOINT | tr -d '"' | tr -d "'")
rclone_union_endpoint=$(printenv RCLONE_UNION_ENDPOINT | tr -d '"' | tr -d "'")
rclone_vfs_endpoint=$(printenv RCLONE_VFS_ENDPOINT | tr -d '"' | tr -d "'")

if [ ! -f "${rclone_exclude_file}" ]; then
  touch ${rclone_exclude_file}
fi

log_dir="/log"
if [ ! -d "${log_dir}" ]; then
	mkdir -p "${log_dir}"
fi

secrets_dir="/secrets"
if [ -d "${secrets_dir}" ]; then
    cp ${secrets_dir}/* /config/
fi
